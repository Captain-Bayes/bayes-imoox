name: Deploy Captain Bayes Notebooks
on:
    push:
        branches:
            - deploy
    workflow_dispatch:

# When two jobs run in parallel, cancel the older ones, to make sure that the website is generated from the most recent commit.
concurrency:
    group: pluto-export
    cancel-in-progress: true

# This action needs permission to write the exported HTML file to the gh-pages branch.
permissions:
    contents: write
    # (all other permission fields default to "none")

jobs:
    deploy-pages:
        name: Deploy Github Pages
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Install Julia
              uses: julia-actions/setup-julia@v1
              with:
                  version: "1" # This will automatically pick the latest Julia version
            - name: Cache Julia artifacts & such
              uses: julia-actions/cache@v1
              with:
                cache-registries: "true"

            # We set up a folder that Pluto can use to cache exported notebooks. If the notebook file did not change, then Pluto can take the exported file from cache instead of running the notebook.
            - name: Set up notebook state cache
              uses: actions/cache@v3
              with:
                  path: pluto_state_cache
                  key: ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}-${{ hashFiles('**/*jl') }}
                  restore-keys: |
                      ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}

            - name: Install bind server requirements
              run: julia -e 'import Pkg; Pkg.instantiate();'
              env:
                JULIA_PROJECT: "./bind-server-environment"
            - name: Install notebook requirements
              run: julia -e 'import Pkg; Pkg.instantiate();'
              env:
                JULIA_PROJECT: "."

            - name: Run & export Pluto notebooks
              run: |
                julia -e 'using Pkg
                  Pkg.activate(mktempdir())
                  Pkg.add([
                    Pkg.PackageSpec(name="PlutoSliderServer", version="0.3.2-0.3"),
                  ])
                  import PlutoSliderServer
                  PlutoSliderServer.github_action(".";
                    Export_cache_dir="pluto_state_cache",
                    Export_baked_notebookfile=false,
                    Export_baked_state=false,
                    Export_disable_ui=false,
                    Export_offer_binder=true, 
                    Export_slider_server_url="https://pluto-bayes.tugraz.at/"
                    # more parameters can go here
                  )'
              env:
                JULIA_LOAD_PATH: ":."
                JULIA_PROJECT: "./bind-server-environment"
            - name: Build and Deploy
              uses: JamesIves/github-pages-deploy-action@releases/v3
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  BRANCH: deploy-output
                  FOLDER: .
    build-docker:
        name: Push Docker image to GitHub Packages
        runs-on: ubuntu-latest
        steps:
          - name: Check out the repo
            uses: actions/checkout@v2
          - name: Login to GitHub Container Registry
            uses: docker/login-action@v1
            with:
              registry: ghcr.io
              username: ${{ secrets.CR_USER }}
              password: ${{ secrets.CR_PAT }}
          - name: Build and push
            uses: docker/build-push-action@v2
            with:
              context: .
              file: ./bind-server-environment/Dockerfile
              platforms: linux/amd64
              push: true
              tags: |
                ghcr.io/captain-bayes/pluto-server:latest
